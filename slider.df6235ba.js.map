{"version":3,"sources":["scripts/slider.js"],"names":["slider","document","querySelector","slides","Array","from","querySelectorAll","reverse","isDragging","startPos","currentTranslate","prevTranslate","animationID","currentIndex","isSliderActivated","touchStartFunctions","sliderActivate","window","innerWidth","forEach","slide","index","touchStart","addEventListener","touchEnd","touchMove","removeEventListener","style","transform","event","getPositionX","requestAnimationFrame","animation","classList","add","cancelAnimationFrame","movedBy","length","setIndicator","setPositionByIndex","remove","currentPosition","type","includes","pageX","touches","clientX","setSliderPosition","currentIndicator","getElementById","target","closest"],"mappings":";AAAA,aAEA,IAAMA,EAASC,SAASC,cAAc,sBAChCC,EAASC,MAAMC,KAAKJ,SACvBK,iBAAiB,sBAEpBH,EAAOI,UAEP,IAAIC,GAAa,EACbC,EAAW,EACXC,EAAmB,EACnBC,EAAgB,EAChBC,EAAc,EACdC,EAAe,EACfC,GAAoB,EACpBC,EAAsB,GAE1B,SAASC,IACHC,OAAOC,WAAa,MAAQJ,GAC9BA,GAAoB,EAEpBX,EAAOgB,QAAQ,SAACC,EAAOC,GAErBN,EAAoBM,GAASC,EAAWD,GACxCD,EAAMG,iBAAiB,aAAcR,EAAoBM,IACzDD,EAAMG,iBAAiB,WAAYC,GACnCJ,EAAMG,iBAAiB,YAAaE,GAGpCL,EAAMG,iBAAiB,YAAaR,EAAoBM,IACxDD,EAAMG,iBAAiB,UAAWC,GAClCJ,EAAMG,iBAAiB,aAAcC,GACrCJ,EAAMG,iBAAiB,YAAaE,MAE7BR,OAAOC,YAAc,KAAOJ,IACrCA,GAAoB,EAEpBX,EAAOgB,QAAQ,SAACC,EAAOC,GAErBD,EAAMM,oBAAoB,aAAcX,EAAoBM,IAC5DD,EAAMM,oBAAoB,WAAYF,GACtCJ,EAAMM,oBAAoB,YAAaD,GAGvCL,EAAMM,oBAAoB,YAAaX,EAAoBM,IAC3DD,EAAMM,oBAAoB,UAAWF,GACrCJ,EAAMM,oBAAoB,aAAcF,GACxCJ,EAAMM,oBAAoB,YAAaD,KAGzCV,EAAsB,IAExBf,EAAO2B,MAAMC,UAAY,OAG3B,IAAMN,EAAa,SAASD,GACnB,OAAA,SAASQ,GACdhB,EAAeQ,EACfZ,EAAWqB,EAAaD,GACxBrB,GAAa,EAEbI,EAAcmB,sBAAsBC,GACpChC,EAAOiC,UAAUC,IAAI,cAIzB,SAASV,IACPhB,GAAa,EAEb2B,qBAAqBvB,GAEfwB,IAAAA,EAAU1B,EAAmBC,EAE/ByB,GAAW,IAAMvB,EAAeV,EAAOkC,OAAS,IAClDxB,GAAgB,GAGduB,EAAU,IAAMvB,EAAe,IACjCA,GAAgB,GAGlByB,IAEAC,IAEAvC,EAAOiC,UAAUO,OAAO,YAG1B,SAASf,EAAUI,GACbrB,GAAAA,EAAY,CACRiC,IAAAA,EAAkBX,EAAaD,GAErCnB,EAAmBC,EAAgB8B,EAAkBhC,GAIzD,SAASqB,EAAaD,GACbA,OAAAA,EAAMa,KAAKC,SAAS,SAAWd,EAAMe,MAAQf,EAAMgB,QAAQ,GAAGC,QAGvE,SAASd,IACPe,IAEIvC,GAEFuB,sBAAsBC,GAI1B,SAASe,IACP/C,EAAO2B,MAAMC,UAA0BlB,cAAAA,OAAAA,EAAmBG,EAA1D,OAGF,SAAS0B,IACP7B,EAAoBG,GAAgBI,OAAOC,WAC3CP,EAAgBD,EAChBqC,IAGF,SAAST,IACHU,IAAAA,EAAmB/C,SAASC,cAAc,sBAE1C8C,GACFA,EAAiBf,UAAUO,OAAO,sBAGpCQ,EAAmB/C,SAASgD,eAA6BpC,cAAAA,OAAAA,EAAe,KAEvDoB,UAAUC,IAAI,qBAGjCjB,OAAOM,iBAAiB,aAAc,SAASM,GACxCA,EAAMqB,OAAOC,QAAQ,kCACxBtC,EAAe,EACfH,EAAmB,EACnBC,EAAgB,EAChB2B,OAIJrB,OAAOM,iBAAiB,OAAQP,GAChCC,OAAOM,iBAAiB,OAAQe,GAChCrB,OAAOM,iBAAiB,SAAUP,GAClCC,OAAOM,iBAAiB,SAAUe","file":"slider.df6235ba.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst slider = document.querySelector('.materials__slider');\nconst slides = Array.from(document\n  .querySelectorAll('.materials__popup'));\n\nslides.reverse();\n\nlet isDragging = false;\nlet startPos = 0;\nlet currentTranslate = 0;\nlet prevTranslate = 0;\nlet animationID = 0;\nlet currentIndex = 0;\nlet isSliderActivated = false;\nlet touchStartFunctions = [];\n\nfunction sliderActivate() {\n  if (window.innerWidth < 639 && !isSliderActivated) {\n    isSliderActivated = true;\n\n    slides.forEach((slide, index) => {\n      // Touch events\n      touchStartFunctions[index] = touchStart(index);\n      slide.addEventListener('touchstart', touchStartFunctions[index]);\n      slide.addEventListener('touchend', touchEnd);\n      slide.addEventListener('touchmove', touchMove);\n\n      // Mouse events\n      slide.addEventListener('mousedown', touchStartFunctions[index]);\n      slide.addEventListener('mouseup', touchEnd);\n      slide.addEventListener('mouseleave', touchEnd);\n      slide.addEventListener('mousemove', touchMove);\n    });\n  } else if (window.innerWidth >= 639 && isSliderActivated) {\n    isSliderActivated = false;\n\n    slides.forEach((slide, index) => {\n      // Touch events\n      slide.removeEventListener('touchstart', touchStartFunctions[index]);\n      slide.removeEventListener('touchend', touchEnd);\n      slide.removeEventListener('touchmove', touchMove);\n\n      // Mouse events\n      slide.removeEventListener('mousedown', touchStartFunctions[index]);\n      slide.removeEventListener('mouseup', touchEnd);\n      slide.removeEventListener('mouseleave', touchEnd);\n      slide.removeEventListener('mousemove', touchMove);\n    });\n\n    touchStartFunctions = [];\n  }\n  slider.style.transform = 'none';\n}\n\nconst touchStart = function(index) {\n  return function(event) {\n    currentIndex = index;\n    startPos = getPositionX(event);\n    isDragging = true;\n    // eslint-disable-next-line no-undef\n    animationID = requestAnimationFrame(animation);\n    slider.classList.add('grabbing');\n  };\n};\n\nfunction touchEnd() {\n  isDragging = false;\n  // eslint-disable-next-line no-undef\n  cancelAnimationFrame(animationID);\n\n  const movedBy = currentTranslate - prevTranslate;\n\n  if (movedBy < -50 && currentIndex < slides.length - 1) {\n    currentIndex += 1;\n  }\n\n  if (movedBy > 50 && currentIndex > 0) {\n    currentIndex -= 1;\n  }\n\n  setIndicator();\n\n  setPositionByIndex();\n\n  slider.classList.remove('grabbing');\n}\n\nfunction touchMove(event) {\n  if (isDragging) {\n    const currentPosition = getPositionX(event);\n\n    currentTranslate = prevTranslate + currentPosition - startPos;\n  }\n}\n\nfunction getPositionX(event) {\n  return event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;\n}\n\nfunction animation() {\n  setSliderPosition();\n\n  if (isDragging) {\n    // eslint-disable-next-line no-undef\n    requestAnimationFrame(animation);\n  };\n}\n\nfunction setSliderPosition() {\n  slider.style.transform = `translateX(${currentTranslate + currentIndex}px)`;\n}\n\nfunction setPositionByIndex() {\n  currentTranslate = (currentIndex * -window.innerWidth);\n  prevTranslate = currentTranslate;\n  setSliderPosition();\n}\n\nfunction setIndicator() {\n  let currentIndicator = document.querySelector('.indicator--active');\n\n  if (currentIndicator) {\n    currentIndicator.classList.remove('indicator--active');\n  }\n\n  currentIndicator = document.getElementById(`indicator--${currentIndex + 1}`);\n\n  currentIndicator.classList.add('indicator--active');\n}\n\nwindow.addEventListener('touchstart', function(event) {\n  if (!event.target.closest('#materials__slider-container')) {\n    currentIndex = 0;\n    currentTranslate = 0;\n    prevTranslate = 0;\n    setIndicator();\n  }\n});\n\nwindow.addEventListener('load', sliderActivate);\nwindow.addEventListener('load', setIndicator);\nwindow.addEventListener('resize', sliderActivate);\nwindow.addEventListener('resize', setIndicator);\n"]}